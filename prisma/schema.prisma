// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum FoodCategory {
  VEGETABLES
  FRUITS
  DAIRY
  MEAT
  SEAFOOD
  GRAINS
  LEGUMES
  NUTS_AND_SEEDS
  HERBS_AND_SPICES
  OILS_AND_FATS
  BEVERAGES
  SWEETS_AND_CONFECTIONS
  BAKED_GOODS
  CONDIMENTS_AND_SAUCES
  FERMENTED_FOODS
  PROCESSED_FOODS
  CEREALS
  PASTA_AND_NOODLES
  SOUPS_AND_STEWS
  FROZEN_FOODS
  CANNED_GOODS
  SNACKS
  EGGS
  POULTRY
  ALTERNATIVE_PROTEINS
}

enum PostState {
  PRIVATE
  PUBLIC
  ARCHIVE
}

model Post {
  id          String        @id @default(cuid())
  imageUrl    String?
  title       String
  userId      String
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  category    FoodCategory?
  publishedAt DateTime?
  createdAt   DateTime      @default(now())
  postState   PostState     @default(PRIVATE)
}

// Necessary for Next auth
model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? // @db.Text
  access_token             String? // @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? // @db.Text
  session_state            String?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  refresh_token_expires_in Int?

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  posts         Post[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
